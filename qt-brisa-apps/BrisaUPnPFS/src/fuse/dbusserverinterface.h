/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c DBusServerInterface -p dbusserverinterface.h:dbusserverinterface.cpp ../common/br.ufal.ic.BrisaUpnp.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUSSERVERINTERFACE_H_1346110791
#define DBUSSERVERINTERFACE_H_1346110791

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface br.ufal.ic.BrisaUpnp
 */
class DBusServerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "br.ufal.ic.BrisaUpnp"; }

public:
    DBusServerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DBusServerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> fileOpen(const QString &filepath)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(filepath);
        return asyncCallWithArgumentList(QLatin1String("fileOpen"), argumentList);
    }

    inline QDBusPendingReply<> fileWrite(const QString &filepath)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(filepath);
        return asyncCallWithArgumentList(QLatin1String("fileWrite"), argumentList);
    }

    inline QDBusPendingReply<> fsUmounted()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("fsUmounted"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace br {
  namespace ufal {
    namespace ic {
      typedef ::DBusServerInterface BrisaUpnp;
    }
  }
}
#endif
